// <auto-generated />
using System;
using CEDigital.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CEDigital.API.Migrations
{
    [DbContext(typeof(CEDigitalContext))]
    [Migration("20250524191652_FixEntregaFK")]
    partial class FixEntregaFK
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CEDigital.API.Models.Archivo", b =>
                {
                    b.Property<int>("IdArchivo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdArchivo"));

                    b.Property<DateTime>("FechaPublicacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdCarpeta")
                        .HasColumnType("int");

                    b.Property<string>("NombreArchivo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ruta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TamañoArchivo")
                        .HasColumnType("int");

                    b.HasKey("IdArchivo");

                    b.HasIndex("IdCarpeta");

                    b.ToTable("Archivo", (string)null);
                });

            modelBuilder.Entity("CEDigital.API.Models.Carpeta", b =>
                {
                    b.Property<int>("IdCarpeta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCarpeta"));

                    b.Property<int>("IdGrupo")
                        .HasColumnType("int");

                    b.Property<string>("NombreCarpeta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdCarpeta");

                    b.HasIndex("IdGrupo");

                    b.ToTable("Carpeta", (string)null);
                });

            modelBuilder.Entity("CEDigital.API.Models.Carrera", b =>
                {
                    b.Property<int>("IdCarrera")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCarrera"));

                    b.Property<string>("NombreCarrera")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdCarrera");

                    b.ToTable("Carrera", (string)null);
                });

            modelBuilder.Entity("CEDigital.API.Models.Curso", b =>
                {
                    b.Property<string>("CodigoCurso")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Creditos")
                        .HasColumnType("int");

                    b.Property<int>("IdCarrera")
                        .HasColumnType("int");

                    b.Property<string>("NombreCurso")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CodigoCurso");

                    b.HasIndex("IdCarrera");

                    b.ToTable("Curso", (string)null);
                });

            modelBuilder.Entity("CEDigital.API.Models.Entrega", b =>
                {
                    b.Property<int>("IdEntrega")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEntrega"));

                    b.Property<string>("CarnetEstudiante")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaEntrega")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdEvaluacion")
                        .HasColumnType("int");

                    b.Property<int?>("IdGrupoTrabajo")
                        .HasColumnType("int");

                    b.Property<string>("RutaEntregable")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdEntrega");

                    b.HasIndex("IdEvaluacion");

                    b.HasIndex("IdGrupoTrabajo");

                    b.ToTable("Entrega", (string)null);
                });

            modelBuilder.Entity("CEDigital.API.Models.EstudianteGrupo", b =>
                {
                    b.Property<int>("IdGrupo")
                        .HasColumnType("int");

                    b.Property<string>("CarnetEstudiante")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("IdGrupo", "CarnetEstudiante");

                    b.ToTable("EstudianteGrupo", (string)null);
                });

            modelBuilder.Entity("CEDigital.API.Models.EstudianteGrupoTrabajo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CarnetEstudiante")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdGrupoTrabajo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdGrupoTrabajo");

                    b.ToTable("EstudianteGrupoTrabajo");
                });

            modelBuilder.Entity("CEDigital.API.Models.Evaluacion", b =>
                {
                    b.Property<int>("IdEvaluacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEvaluacion"));

                    b.Property<int>("CantEstudiantesGrupo")
                        .HasColumnType("int");

                    b.Property<bool>("EsGrupal")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaHoraLimite")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdRubro")
                        .HasColumnType("int");

                    b.Property<string>("NombreEvaluacion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("RutaEspecificacion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("TieneEntregable")
                        .HasColumnType("bit");

                    b.Property<int>("ValorPorcentual")
                        .HasColumnType("int");

                    b.HasKey("IdEvaluacion");

                    b.HasIndex("IdRubro");

                    b.ToTable("Evaluacion", (string)null);
                });

            modelBuilder.Entity("CEDigital.API.Models.Grupo", b =>
                {
                    b.Property<int>("IdGrupo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdGrupo"));

                    b.Property<string>("CodigoCurso")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("IdSemestre")
                        .HasColumnType("int");

                    b.Property<int>("NumeroGrupo")
                        .HasColumnType("int");

                    b.HasKey("IdGrupo");

                    b.HasIndex("CodigoCurso");

                    b.HasIndex("IdSemestre");

                    b.ToTable("Grupo", (string)null);
                });

            modelBuilder.Entity("CEDigital.API.Models.GrupoTrabajo", b =>
                {
                    b.Property<int>("IdGrupoTrabajo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdGrupoTrabajo"));

                    b.Property<string>("CarnetEstudiante")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdEvaluacion")
                        .HasColumnType("int");

                    b.HasKey("IdGrupoTrabajo");

                    b.HasIndex("IdEvaluacion");

                    b.ToTable("GrupoTrabajo", (string)null);
                });

            modelBuilder.Entity("CEDigital.API.Models.NotaEvaluacion", b =>
                {
                    b.Property<int>("IdNotaEvaluacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdNotaEvaluacion"));

                    b.Property<string>("CarnetEstudiante")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdEvaluacion")
                        .HasColumnType("int");

                    b.Property<int?>("IdGrupoTrabajo")
                        .HasColumnType("int");

                    b.Property<string>("Observaciones")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<decimal>("PorcentajeObtenido")
                        .HasColumnType("decimal(5,2)");

                    b.Property<bool>("Publicada")
                        .HasColumnType("bit");

                    b.Property<string>("RutaArchivoDetalles")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("IdNotaEvaluacion");

                    b.HasIndex("IdEvaluacion");

                    b.HasIndex("IdGrupoTrabajo");

                    b.ToTable("NotaEvaluacion", (string)null);
                });

            modelBuilder.Entity("CEDigital.API.Models.Noticia", b =>
                {
                    b.Property<int>("IdNoticia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdNoticia"));

                    b.Property<DateTime>("FechaPublicacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdGrupo")
                        .HasColumnType("int");

                    b.Property<string>("Mensaje")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdNoticia");

                    b.HasIndex("IdGrupo");

                    b.ToTable("Noticia", (string)null);
                });

            modelBuilder.Entity("CEDigital.API.Models.ProfesorGrupo", b =>
                {
                    b.Property<int>("IdGrupo")
                        .HasColumnType("int");

                    b.Property<string>("CedulaProfesor")
                        .HasColumnType("nvarchar(450)");

                    b.PrimitiveCollection<string>("CedulasProfesores")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdGrupo", "CedulaProfesor");

                    b.ToTable("ProfesorGrupo", (string)null);
                });

            modelBuilder.Entity("CEDigital.API.Models.Rubro", b =>
                {
                    b.Property<int>("IdRubro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRubro"));

                    b.Property<int>("IdGrupo")
                        .HasColumnType("int");

                    b.Property<string>("NombreRubro")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Porcentaje")
                        .HasColumnType("int");

                    b.HasKey("IdRubro");

                    b.HasIndex("IdGrupo");

                    b.ToTable("Rubro", (string)null);
                });

            modelBuilder.Entity("CEDigital.API.Models.Semestre", b =>
                {
                    b.Property<int>("IdSemestre")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSemestre"));

                    b.Property<int>("Año")
                        .HasColumnType("int");

                    b.Property<string>("Periodo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdSemestre");

                    b.ToTable("Semestre", (string)null);
                });

            modelBuilder.Entity("CEDigital.API.Models.Archivo", b =>
                {
                    b.HasOne("CEDigital.API.Models.Carpeta", "Carpeta")
                        .WithMany()
                        .HasForeignKey("IdCarpeta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Carpeta");
                });

            modelBuilder.Entity("CEDigital.API.Models.Carpeta", b =>
                {
                    b.HasOne("CEDigital.API.Models.Grupo", "Grupo")
                        .WithMany()
                        .HasForeignKey("IdGrupo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Grupo");
                });

            modelBuilder.Entity("CEDigital.API.Models.Curso", b =>
                {
                    b.HasOne("CEDigital.API.Models.Carrera", "Carrera")
                        .WithMany()
                        .HasForeignKey("IdCarrera")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Carrera");
                });

            modelBuilder.Entity("CEDigital.API.Models.Entrega", b =>
                {
                    b.HasOne("CEDigital.API.Models.GrupoTrabajo", "GrupoTrabajo")
                        .WithMany()
                        .HasForeignKey("GrupoTrabajoIdGrupoTrabajo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CEDigital.API.Models.Evaluacion", "Evaluacion")
                        .WithMany()
                        .HasForeignKey("IdEvaluacion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CEDigital.API.Models.GrupoTrabajo", null)
                        .WithMany("Entregas")
                        .HasForeignKey("IdGrupoTrabajo");

                    b.Navigation("Evaluacion");

                    b.Navigation("GrupoTrabajo");
                });

            modelBuilder.Entity("CEDigital.API.Models.EstudianteGrupo", b =>
                {
                    b.HasOne("CEDigital.API.Models.Grupo", "Grupo")
                        .WithMany("Estudiantes")
                        .HasForeignKey("IdGrupo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Grupo");
                });

            modelBuilder.Entity("CEDigital.API.Models.EstudianteGrupoTrabajo", b =>
                {
                    b.HasOne("CEDigital.API.Models.GrupoTrabajo", "GrupoTrabajo")
                        .WithMany("EstudianteGrupoTrabajo")
                        .HasForeignKey("IdGrupoTrabajo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GrupoTrabajo");
                });

            modelBuilder.Entity("CEDigital.API.Models.Evaluacion", b =>
                {
                    b.HasOne("CEDigital.API.Models.Rubro", "Rubro")
                        .WithMany()
                        .HasForeignKey("IdRubro")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rubro");
                });

            modelBuilder.Entity("CEDigital.API.Models.Grupo", b =>
                {
                    b.HasOne("CEDigital.API.Models.Curso", "Curso")
                        .WithMany()
                        .HasForeignKey("CodigoCurso")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CEDigital.API.Models.Semestre", "Semestre")
                        .WithMany()
                        .HasForeignKey("IdSemestre")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Curso");

                    b.Navigation("Semestre");
                });

            modelBuilder.Entity("CEDigital.API.Models.GrupoTrabajo", b =>
                {
                    b.HasOne("CEDigital.API.Models.Evaluacion", "Evaluacion")
                        .WithMany()
                        .HasForeignKey("IdEvaluacion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Evaluacion");
                });

            modelBuilder.Entity("CEDigital.API.Models.NotaEvaluacion", b =>
                {
                    b.HasOne("CEDigital.API.Models.Evaluacion", "Evaluacion")
                        .WithMany()
                        .HasForeignKey("IdEvaluacion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CEDigital.API.Models.GrupoTrabajo", "GrupoTrabajo")
                        .WithMany("NotaEvaluaciones")
                        .HasForeignKey("IdGrupoTrabajo");

                    b.Navigation("Evaluacion");

                    b.Navigation("GrupoTrabajo");
                });

            modelBuilder.Entity("CEDigital.API.Models.Noticia", b =>
                {
                    b.HasOne("CEDigital.API.Models.Grupo", "Grupo")
                        .WithMany()
                        .HasForeignKey("IdGrupo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Grupo");
                });

            modelBuilder.Entity("CEDigital.API.Models.ProfesorGrupo", b =>
                {
                    b.HasOne("CEDigital.API.Models.Grupo", "Grupo")
                        .WithMany()
                        .HasForeignKey("IdGrupo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Grupo");
                });

            modelBuilder.Entity("CEDigital.API.Models.Rubro", b =>
                {
                    b.HasOne("CEDigital.API.Models.Grupo", "Grupo")
                        .WithMany()
                        .HasForeignKey("IdGrupo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Grupo");
                });

            modelBuilder.Entity("CEDigital.API.Models.Grupo", b =>
                {
                    b.Navigation("Estudiantes");
                });

            modelBuilder.Entity("CEDigital.API.Models.GrupoTrabajo", b =>
                {
                    b.Navigation("Entregas");

                    b.Navigation("EstudianteGrupoTrabajo");

                    b.Navigation("NotaEvaluaciones");
                });
#pragma warning restore 612, 618
        }
    }
}
